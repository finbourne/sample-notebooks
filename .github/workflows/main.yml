# This job runs the project tests

name: Build and test

# Trigger the workflow on push or pull request to master or develop

on:
  push:
    branches: [master, develop]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 45

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Extract version
        id: extract_version
        run: |
          swagger_location=/swagger/v0/swagger.json
          echo "::set-output name=version::$(curl -s "${{ secrets.DEVELOP_FBN_LUSID_API_URL }}$swagger_location" | jq -r .info.version)"

      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}

      - name: Run tests on DEVELOP branch
        uses: docker://finbourne/notebook-runner2:latest
        if: ${{ github.base_ref == 'develop' || github.ref == 'refs/heads/develop' }}
        env:
          FBN_TOKEN_URL: ${{ secrets.DEVELOP_FBN_TOKEN_URL }}
          FBN_USERNAME: ${{ secrets.DEVELOP_FBN_USERNAME }}
          FBN_PASSWORD: ${{ secrets.DEVELOP_FBN_PASSWORD }}
          FBN_CLIENT_ID: ${{ secrets.DEVELOP_FBN_CLIENT_ID }}
          FBN_CLIENT_SECRET: ${{ secrets.DEVELOP_FBN_CLIENT_SECRET }}
          FBN_LUSID_API_URL: ${{ secrets.DEVELOP_FBN_LUSID_API_URL }}
          FBN_APP_NAME: ${{ secrets.DEVELOP_FBN_CLIENT_ID }}
          FBN_LUMI_API_URL: ${{ secrets.DEVELOP_FBN_LUMI_API_URL }}
          FBN_LUSID_IDENTITY_URL: ${{secrets.URI}}/identity
          FBN_LUSID_ACCESS_URL: ${{secrets.URI}}/access
          FBN_LUSID_DRIVE_URL: ${{secrets.URI}}/drive
          FBN_NOTIFICATIONS_API_URL: ${{secrets.URI}}/notifications
          FBN_SCHEDULER_API_URL: ${{secrets.URI}}/scheduler2
          FBN_INSIGHTS_API_URL: ${{secrets.URI}}/insights
          FBN_CONFIGURATION_API_URL: ${{secrets.URI}}/configuration

        with:
          args: -n ./examples -v ${{ steps.extract_version.outputs.version }} -u ${{ secrets.DEVELOP_NEXUS_USERNAME }} -p ${{ secrets.DEVELOP_NEXUS_PASSWORD }} -c

      - name: Run tests on MASTER branch
        uses: docker://finbourne/notebook-runner2:latest
        if: ${{ github.base_ref == 'master' }}
        env:
          FBN_TOKEN_URL: ${{ secrets.MASTER_FBN_TOKEN_URL }}
          FBN_USERNAME: ${{ secrets.MASTER_FBN_USERNAME }}
          FBN_PASSWORD: ${{ secrets.MASTER_FBN_PASSWORD }}
          FBN_CLIENT_ID: ${{ secrets.MASTER_FBN_CLIENT_ID }}
          FBN_CLIENT_SECRET: ${{ secrets.MASTER_FBN_CLIENT_SECRET }}
          FBN_LUSID_API_URL: ${{ secrets.MASTER_FBN_LUSID_API_URL }}
          FBN_APP_NAME: ${{ secrets.MASTER_FBN_CLIENT_ID }}
          FBN_LUMI_API_URL: ${{ secrets.MASTER_FBN_LUMI_API_URL }}
          FBN_LUSID_IDENTITY_URL: ${{secrets.URI}}/identity
          FBN_LUSID_ACCESS_URL: ${{secrets.URI}}/access
          FBN_LUSID_DRIVE_URL: ${{secrets.URI}}/drive
          FBN_NOTIFICATIONS_API_URL: ${{secrets.URI}}/notifications
          FBN_SCHEDULER_API_URL: ${{secrets.URI}}/scheduler2
          FBN_INSIGHTS_API_URL: ${{secrets.URI}}/insights
          FBN_CONFIGURATION_API_URL: ${{secrets.URI}}/configuration

        with:
          args: -n ./examples -v ${{ steps.extract_version.outputs.version }} -u ${{ secrets.MASTER_NEXUS_USERNAME }} -p ${{ secrets.MASTER_NEXUS_PASSWORD }} -c

      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
            username: 'github-actions-tests',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `Job ${process.env.AS_WORKFLOW} (Commit ${process.env.AS_COMMIT} into ${process.env.GITHUB_BASE_REF} from ${process.env.GITHUB_HEAD_REF}) of ${process.env.AS_REPO} by ${process.env.GITHUB_ACTOR} failed in ${process.env.AS_TOOK}`
            }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure()
